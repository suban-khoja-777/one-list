{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/firebase.js","../../src/EventManager.js","../../src/utility/Button.svelte","../../src/utility/Input.svelte","../../src/Pages/LoginPage.svelte","../../src/constants.js","../../src/api.js","../../src/Task.svelte","../../src/Pages/AppPage.svelte","../../src/utility/LoadSpinner.svelte","../../src/utility/ProcessSpinner.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.1' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","const firebaseConfig = {\r\n  apiKey: \"AIzaSyCZ2HXCcsbMsIHMxAdqiStOOx7AA5Xhkms\",\r\n  authDomain: \"tick-todo-app.firebaseapp.com\",\r\n  projectId: \"tick-todo-app\",\r\n  storageBucket: \"tick-todo-app.appspot.com\",\r\n  messagingSenderId: \"114323470299\",\r\n  appId: \"1:114323470299:web:5db79253e64602c2f199fe\",\r\n  measurementId: \"G-SHK9S7SRYF\"\r\n};\r\n  \r\n  Object.freeze(firebaseConfig);\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  \r\n  export const signinUser = (email,password) => {\r\n    return firebase.auth().signInWithEmailAndPassword(email, password);\r\n  };\r\n  \r\n  export const signoutUser = () => {\r\n    firebase.auth().signOut();\r\n  };\r\n\r\n  export const AUTH = firebase.auth();\r\n  ","const events = {};\r\n\r\nconst EVENTS = {\r\n    SHOW_SPINNER : 'SHOW_SPINNER',\r\n    HIDE_SPINNER : 'HIDE_SPINNER',\r\n    UPDATE_STATUS : \"UPDATE_TASK\",\r\n    DELETE_TASK : \"DELETE_TASK\",\r\n    OPEN_TASK_DETAIL : \"OPEN_TASK_DETAIL\"\r\n}\r\n\r\nObject.freeze(EVENTS);\r\n\r\nconst registerListener = (eventName, callback) => {  \r\n    if (!events[eventName]) {\r\n        events[eventName] = [];\r\n    }\r\n    const duplicate = events[eventName].find((listener) => {\r\n        return listener.callback === callback;\r\n    });\r\n    if (!duplicate) {\r\n        events[eventName].push({ callback});\r\n    }\r\n};\r\n \r\nconst fireEvent = (eventName, payload) => {\r\n    if (events[eventName]) {\r\n        const listeners = events[eventName];\r\n        listeners.forEach((listener) => {       \r\n            try {\r\n                listener.callback.call(this,payload);\r\n            } catch (error) {\r\n                console.error('@eventName : ',eventName) &&\r\n                console.error('@listener : ',listener) &&\r\n                console.error('@payload : ',payload) &&\r\n                console.error('@error : ',error)\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nexport {\r\n    registerListener,\r\n    fireEvent,\r\n    EVENTS\r\n};\r\n ","<script>\r\n\r\n    export let label;\r\n    export let onClick;\r\n    export let type;\r\n\r\n</script>\r\n\r\n\r\n<button class=\"pointer text-bold\" data-type={type} on:click={onClick}>{label}</button>\r\n\r\n<style>\r\n    button{\r\n        border: none;\r\n        outline: none;\r\n        padding : 10px;\r\n    }\r\n\r\n    button[data-type=\"primary\"]{\r\n        background-color: var(--primary-color);\r\n        color: white;\r\n        border : 2px solid var(--primary-color);\r\n    }\r\n\r\n    button[data-type=\"secondary\"]{\r\n        background-color: var(--dark-color);\r\n        border : 2px solid var(--dark-color);\r\n        color: white;\r\n    }\r\n\r\n    button[data-type=\"link\"]{\r\n        color: var(--primary-color);\r\n        text-decoration: underline;\r\n        font-weight: 600;\r\n        padding: 0;\r\n        background-color: transparent;\r\n    }\r\n    \r\n</style>","<script>\r\n\r\n    export let hasLabel = false;\r\n    export let type;\r\n    export let name;\r\n    export let label;\r\n    export let placeholder;\r\n    export let onChange;\r\n    export let onKeyUp;\r\n    export let value = \"\";\r\n    export let width_class;\r\n    export let label_class = 'dark';\r\n    export let classes;\r\n    export let data_field;\r\n    export let options;\r\n</script>\r\n\r\n{#if hasLabel}\r\n    <label class=\"text-bold {label_class}\" for={name}>{label}</label>    \r\n{/if}\r\n\r\n{#if type === 'select'}\r\n    <select class=\"column flex grow border-bottom-primary text-primary {classes} border-box text-center pointer border-box justify-center status-column\" {value} {name} on:change={onChange} data-field={data_field}>\r\n        {#each options as status}\r\n            <option value={status} class=\"option bg-white text-primary\">{status}</option>\r\n        {/each}\r\n    </select>\r\n    {:else if type === \"text-long\"}\r\n        <textarea class=\"border-primary text-primary border-box bg-white {width_class}\" rows=\"10\" on:change={onChange} data-field={data_field} {value}></textarea>\r\n    {:else}\r\n        <input class=\"{classes} border-primary border-box {width_class}\" {type} {name} on:change={onChange} on:keyup={onKeyUp} {value} {placeholder} data-field={data_field}/>\r\n{/if}\r\n\r\n\r\n<style>\r\n\r\n    input{\r\n        padding: 0.5em;\r\n        outline: none;\r\n    }\r\n\r\n    label {\r\n        font-family: normal;\r\n        margin: 1em 0 0 0;\r\n    }\r\n\r\n    .width-half{\r\n        width: 50%;\r\n    }\r\n\r\n    .width-full{\r\n        width: 100%;\r\n    }\r\n\r\n    label.dark{\r\n        color: var(--primary-color);\r\n    }\r\n    \r\n    label.light{\r\n        color: white;\r\n    }\r\n\r\n    input[type=\"date\"]{\r\n        border: none;\r\n        outline: none;\r\n    }\r\n\r\n    select{\r\n        border: none;\r\n        outline: none;\r\n        -webkit-appearance: none;\r\n        -moz-appearance: none;\r\n        text-indent: 1px;\r\n        text-overflow: '';\r\n    }\r\n\r\n</style>","<script>\r\n    import { signinUser } from \"../firebase\";\r\n    import {fireEvent,EVENTS} from \"../EventManager\";\r\n    import Button from \"../utility/Button.svelte\";\r\n    import Input from \"../utility/Input.svelte\";\r\n\r\n    let user = {\r\n        email:\"\",\r\n        name:\"\"\r\n    }\r\n\r\n    let showLogin = false;\r\n\r\n    const showLoginPage = () => {\r\n        showLogin = true;\r\n    }\r\n\r\n    const hideLoginPage = () => {\r\n        showLogin = false;\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        user[e.target.name] = e.target.value;\r\n    }\r\n\r\n    const onSignIn = () => {\r\n        \r\n        const email = user.email;\r\n        const password = user.password;\r\n\r\n        if(email && password){\r\n            fireEvent(EVENTS.SHOW_SPINNER,{});\r\n            signinUser(email,password)\r\n            .then (res => {\r\n                fireEvent(EVENTS.HIDE_SPINNER,{});\r\n            })\r\n            .catch(err => {\r\n                fireEvent(EVENTS.HIDE_SPINNER,{});\r\n            });\r\n        }\r\n    }\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n    .container{\r\n        margin: 0;\r\n        padding: 0;\r\n        height: 100vh;\r\n    }\r\n\r\n    .app-header{\r\n        padding: 1.5em 1em;\r\n        background-color: #f7f7f7;\r\n        border-bottom: 1px solid #e0e0e0;\r\n    }\r\n\r\n    .app-footer{\r\n        padding: 1.5em 1em;\r\n    }\r\n\r\n    .app-name {\r\n        font-family: normal;\r\n        font-size: 1.75em;\r\n    }\r\n\r\n    .logo {\r\n        width: 8em;\r\n        margin: 0 5px;\r\n    }\r\n\r\n    .form-container{\r\n        height: 100vh;\r\n    }\r\n\r\n    .tagline{\r\n        font-size: 2.5rem;\r\n        margin: 0;\r\n    }\r\n\r\n    .form {\r\n        padding: 3rem;\r\n        width: 25%;\r\n    }\r\n\r\n    .highlight{\r\n        color: var(--dark-color);\r\n    }\r\n\r\n    .home{\r\n        width: 50%;\r\n        height: 50%;\r\n    }\r\n\r\n    .form{\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n\r\n    .sub-container{\r\n        box-shadow: rgb(0 0 0 / 70%) 0 25px 50px -15px !important;\r\n        width: 70%;\r\n    }\r\n\r\n</style>\r\n\r\n<div class=\"flex flex-column container bg-white\">\r\n    \r\n    {#if showLogin}\r\n        <div class=\"form-container flex justify-center flex-row align-center login-form\">\r\n            <div class=\"sub-container flex justify-center flex-row bg-white\">\r\n                <div class=\"form flex justify-center bg-dark\">\r\n                    <img class=\"form\" src=\"./login-form.svg\" alt=\"oneList\"/>\r\n                </div>\r\n                <!-- <div class=\"line\"></div> -->\r\n                <div class=\"form form-right flex justify-center flex-column bg-white\">\r\n                    <span class=\"app-name flex align-center justify-center text-bold text-primary\">\r\n                        <img class=\"logo\" src=\"./logo.svg\" alt=\"oneList\"/>\r\n                    </span>\r\n                    <br/>\r\n                    <Input name=\"email\" type=\"email\" label=\"Email\" hasLabel onChange={handleChange}/>\r\n                    <br/>\r\n                    <Input name=\"password\" type=\"password\" label=\"Password\" hasLabel onChange={handleChange}/>\r\n                    <br/>\r\n                    <Button onClick={onSignIn} label=\"Login\" type=\"primary\"/>\r\n                    <br/>\r\n                    <br/>\r\n                    <Button onClick={hideLoginPage} label=\"Return to home\" type=\"link\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        {:else}\r\n        <header class=\"app-header flex justify-space-between align-center\">\r\n            <span class=\"app-name flex align-center text-bold text-primary\">\r\n                <img class=\"logo\" src=\"./logo.svg\" alt=\"oneList\"/>\r\n            </span>\r\n        </header>\r\n        \r\n        <div class=\"flex justify-center flex-row align-center grow\">\r\n            <div class=\"flex justify-center flex-column align-center tagline-container\">\r\n                <h1 class=\"tagline\">Manage your task better with </h1>\r\n                <h1 class=\"tagline highlight text-underline\">onelist</h1>\r\n                <br/>\r\n                <Button onClick={showLoginPage} label=\"Login\" type=\"secondary\"/>\r\n            </div>\r\n            <div class=\"flex justify-center flex-column align-center tagline-container\">\r\n                <img class=\"home\" src=\"./login.svg\" alt=\"oneList\"/>    \r\n            </div>\r\n        </div>\r\n\r\n        <footer class=\"app-footer flex justify-end align-center bg-transparent\">\r\n            <span class=\"dev-name text-bold highlight text-underline\">Suban Khoja</span>\r\n        </footer>\r\n    {/if}\r\n    \r\n</div>","\r\nexport const APP_NAME = 'onelist';\r\n\r\nconst API = {\r\n    BASE_ENDPOINT : 'https://onelist-001-developer-edition.ap27.force.com/services/apexrest/api/v2/',\r\n    ENDPOINTS : {\r\n        \"getUserTasks\" : 'getUserTasks',\r\n        \"updateTask\" : \"updateTask\",\r\n        \"createTask\" : \"createTask\",\r\n        \"deleteTask\" : \"deleteTask\"\r\n    }\r\n};\r\n\r\nconst statuses = [\r\n    \"Not Started\",\r\n    \"In Progress\",\r\n    \"Completed\",\r\n];\r\n\r\nconst columns = [\r\n    {\r\n        label : \"Name\",\r\n        key : \"task_name\",\r\n        show_in_list : true,\r\n        show_in_detail : true,\r\n        show_header : false,\r\n        allow_inline_edit : false,\r\n        field_type : \"text\"\r\n    },\r\n    {\r\n        label : \"Start Date\",\r\n        key : \"task_start_date\",\r\n        show_in_list : true,\r\n        show_in_detail : false,\r\n        show_header : true,\r\n        allow_inline_edit : true,\r\n        field_type : \"date\"\r\n    },\r\n    {\r\n        label : \"End Date\",\r\n        key : \"task_end_date\",\r\n        show_in_list : true,\r\n        show_in_detail : false,\r\n        show_header : true,\r\n        allow_inline_edit : true,\r\n        field_type : \"date\"\r\n    },\r\n    {\r\n        label : \"Status\",\r\n        key : \"task_status\",\r\n        show_in_list : true,\r\n        show_in_detail : false,\r\n        show_header : true,\r\n        allow_inline_edit : true,\r\n        field_type : \"select\"\r\n    },\r\n    {\r\n        label : \"Notes\",\r\n        key : \"task_note\",\r\n        show_in_list : false,\r\n        show_in_detail : true,\r\n        show_header : false,\r\n        allow_inline_edit : false,\r\n        field_type : \"text-long\"\r\n    }\r\n]\r\n\r\n\r\nconst getStatusClass = (_status) => {\r\n    if(!_status) return '';\r\n    return _status.replace(' ','-');\r\n}\r\n\r\n\r\nObject.freeze(API);\r\nObject.freeze(statuses);\r\nObject.freeze(columns);\r\n\r\nexport {\r\n    API,\r\n    statuses,\r\n    columns,\r\n    getStatusClass\r\n};\r\n\r\n\r\n","import { API } from \"./constants\";\r\n\r\nexport const getUserTasks = (user_id) => {\r\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.getUserTasks,{\r\n        method : 'POST',\r\n        body : JSON.stringify({\r\n            user_id\r\n        })\r\n    })\r\n    .then(res => res.json())\r\n    .catch(err => {\r\n        console.error('getUserTasks : ',err);\r\n    });\r\n};\r\n\r\nexport const createTask = (user_id,task_name,note) => {\r\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.createTask,{\r\n        method : 'POST',\r\n        body : JSON.stringify({\r\n            user_id,\r\n            content : task_name,\r\n            note\r\n        })\r\n    }).then(res => res.json())\r\n    .catch(err => {\r\n        console.error('createTask : ',err);\r\n    });\r\n};\r\n\r\nexport const deleteTask = (user_id,node_id) => {\r\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.deleteTask,{\r\n        method : 'POST',\r\n        body : JSON.stringify({\r\n            user_id,\r\n            node_id\r\n        })\r\n    }).then(res => res.json())\r\n    .catch(err => {\r\n        console.error('deleteTask : ',err);\r\n    });\r\n};\r\n\r\nexport const updateTask = (user_id,node_id,content,note) => {\r\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.updateTask,{\r\n        method : 'POST',\r\n        body : JSON.stringify({\r\n            user_id,\r\n            node_id,\r\n            content,\r\n            note\r\n        })\r\n    }).then(res => res.json())\r\n    .catch(err => {\r\n        console.error('updateTask : ',err);\r\n    });\r\n};\r\n","<script>\r\n\r\n    import { fireEvent, EVENTS } from \"./EventManager\";\r\n    import { statuses , columns ,getStatusClass } from \"./constants\";\r\n    import Input from \"./utility/Input.svelte\";\r\n    import Button from \"./utility/Button.svelte\";\r\n    export let task;\r\n    \r\n    let updated_task = {...task};\r\n\r\n    const handleChange = (e) => {\r\n        updated_task[e.target.dataset.field] = e.target.value;\r\n        fireEvent(EVENTS.UPDATE_TASK,updated_task);\r\n    }\r\n\r\n    const sendOpenTaskDetailEvent = () => {\r\n        fireEvent(EVENTS.OPEN_TASK_DETAIL,task.task_id);\r\n    }\r\n\r\n    const sendDeleteTaskDetailEvent = () => {\r\n        fireEvent(EVENTS.DELETE_TASK,task.task_id);\r\n    }\r\n    \r\n</script>\r\n\r\n<li class=\"columns text-primary flex justify-space-between align-center border-box\">\r\n    {#each columns as column}\r\n        {#if column.show_in_list}\r\n            <span class=\"column flex justify-center border-box text-bold pointer {column.key} {column.key == 'task_name' ? 'justify-start' : 'justify-center'} {column.field_type == 'select' ? 'align-stretch' : 'align-center'}\">\r\n                {#if column.allow_inline_edit}\r\n                    {#if column.field_type !== 'select'}\r\n                        <Input type={column.field_type} classes=\"bg-transparent\" value={task[column.key]} onChange={handleChange} data_field={column.key} />\r\n                        {:else}\r\n                        <Input type={column.field_type} classes={getStatusClass(updated_task[column.key])} value={updated_task[column.key]} onChange={handleChange} data_field={column.key} options={statuses}/>\r\n                    {/if}\r\n                    {:else}\r\n                    \r\n                    <span>{task[column.key]}</span>\r\n                    <span class=\"row-actions\">\r\n                        <span class=\"action\">\r\n                            <Button onClick={sendOpenTaskDetailEvent} label=\"Edit\" type=\"link\"/>\r\n                        </span>\r\n                        <span class=\"action\">\r\n                            <Button onClick={sendDeleteTaskDetailEvent} label=\"Delete\" type=\"link\"/>\r\n                        </span>\r\n                    </span>\r\n                {/if}\r\n            </span>    \r\n        {/if}\r\n    {/each}\r\n</li>\r\n\r\n<style>\r\n\r\n    .columns{\r\n        width: 100%;\r\n        list-style: none;\r\n        background-color: #f5f6f8;\r\n        border-bottom: 2px solid white;\r\n        padding-left: 1rem;\r\n    }\r\n\r\n    .column{\r\n        height: 40px;\r\n    }\r\n\r\n    .column-padding-around{\r\n        padding: 0.5rem;\r\n    }\r\n\r\n    .row-actions{\r\n        padding: 0 1rem;\r\n        display: none;\r\n    }\r\n\r\n    .row-actions > .action{\r\n        padding-left:1rem;\r\n    }\r\n\r\n    li.columns:hover{\r\n        background-color : #bcf9e4;\r\n    }\r\n\r\n    li.columns:hover .row-actions{\r\n        display: inherit;\r\n    }\r\n\r\n\r\n</style>","<script>\r\n    import { onMount } from \"svelte\";\r\n    import {getUserTasks , updateTask , deleteTask , createTask } from '../api';\r\n    import { AUTH , signoutUser} from \"../firebase\";\r\n    import Input from \"../utility/Input.svelte\";\r\n    import {registerListener , EVENTS, fireEvent} from '../EventManager';\r\n    import Button from \"../utility/Button.svelte\";\r\n    import Task from \"../Task.svelte\";\r\n    import { columns } from \"../constants\";\r\n    let store = [];\r\n\r\n    let new_task_name;\r\n    let selected_task;\r\n\r\n    const handleChange = (e) => {\r\n        new_task_name = e.target.value;\r\n    }\r\n\r\n    const handleTaskChange = (e) => {\r\n        selected_task[e.target.dataset.field] = e.target.value;\r\n    }\r\n\r\n    onMount( () => {\r\n\r\n        registerListener(EVENTS.UPDATE_TASK,processUpdateTask);\r\n        registerListener(EVENTS.DELETE_TASK,processDeleteTask);\r\n        registerListener(EVENTS.OPEN_TASK_DETAIL,processOpenTaskDetail);\r\n        registerListener(EVENTS.CLOSE_POPUP,processCloseTaskDetail);\r\n\r\n        fireEvent(EVENTS.SHOW_SPINNER,{});\r\n\r\n        getUserTasks(AUTH.currentUser.uid)\r\n        .then(res => {\r\n            if(res && res.nodes && res.nodes.length){\r\n                store = res.nodes;\r\n                for(let i=0;i<store.length;i++){\r\n                    if(store[i].note){\r\n                        const json = JSON.parse(store[i].note);\r\n                        store[i]['task_start_date'] = json.task_start_date;\r\n                        store[i]['task_end_date'] = json.task_end_date;\r\n                        store[i]['task_note'] = json.task_note;\r\n                        store[i]['task_status'] = json.task_status;\r\n                        store[i]['task_name'] = store[i].content;\r\n                        store[i]['task_id'] = store[i].id;\r\n                        delete store[i].note;\r\n                        delete store[i].checked;\r\n                        delete store[i].content;\r\n                        delete store[i].id;\r\n                    }\r\n                }\r\n                fireEvent(EVENTS.HIDE_SPINNER,{});\r\n            }else{\r\n                fireEvent(EVENTS.HIDE_SPINNER,{});\r\n            }\r\n        })\r\n        .catch(err => {\r\n            fireEvent(EVENTS.HIDE_SPINNER,{});\r\n        })\r\n    });\r\n\r\n    const processDeleteTask = (task_id) => {\r\n        deleteTask(AUTH.currentUser.uid,task_id);\r\n        store = store.filter(task => task.task_id !== task_id);\r\n    }\r\n\r\n    const processUpdateTask = (data) => {\r\n        const _note = {\r\n            task_start_date : data.task_start_date ? data.task_start_date : \"\",\r\n            task_end_date : data.task_end_date ? data.task_end_date : \"\",\r\n            task_note : data.task_note ? data.task_note : \"\",\r\n            task_status : data.task_status ? data.task_status : \"\",\r\n        }\r\n        updateTask(AUTH.currentUser.uid,data.task_id,data.task_name,JSON.stringify(_note));\r\n    }\r\n\r\n    const handleCreateTask = (evt) => {\r\n        if(evt.key === \"Enter\" && new_task_name){\r\n            fireEvent(EVENTS.SHOW_SPINNER,{});\r\n            createTask(\r\n                AUTH.currentUser.uid,\r\n                new_task_name,\r\n                JSON.stringify({\r\n                    task_start_date : \"\",\r\n                    task_end_date : \"\",\r\n                    task_note : \"\",\r\n                    task_status : \"Not Started\"\r\n                })\r\n            )\r\n            .then(res => {\r\n                store.push({\r\n                    task_id:res.new_node_ids[0],\r\n                    task_name : new_task_name,\r\n                    task_start_date : \"\",\r\n                    task_end_date : \"\",\r\n                    task_note : \"\",\r\n                    task_status : \"Not Started\"\r\n                });\r\n                new_task_name = \"\";\r\n                store = store;\r\n                fireEvent(EVENTS.HIDE_SPINNER,{});\r\n            })\r\n            .catch(err => {\r\n                fireEvent(EVENTS.HIDE_SPINNER,{});\r\n            });\r\n        }\r\n    }\r\n\r\n    const processOpenTaskDetail = (task_id) => {\r\n        selected_task = store.filter(task => task.task_id === task_id)[0];\r\n\r\n    }\r\n\r\n    const processCloseTaskDetail = () => {\r\n        selected_task = null;\r\n    }\r\n\r\n    const saveTaskTitleAndNote = () => {\r\n        fireEvent(EVENTS.SHOW_SPINNER,{});\r\n        const _note = {\r\n            task_start_date : selected_task.task_start_date ? selected_task.task_start_date : \"\",\r\n            task_end_date : selected_task.task_end_date ? selected_task.task_end_date : \"\",\r\n            task_note : selected_task.task_note ? selected_task.task_note : \"\",\r\n            task_status : selected_task.task_status ? selected_task.task_status : \"\"\r\n        }\r\n        updateTask(AUTH.currentUser.uid,selected_task.task_id,selected_task.task_name,JSON.stringify(_note))\r\n        .then(res => {\r\n            fireEvent(EVENTS.HIDE_SPINNER,{});\r\n        })\r\n        .catch(err => {\r\n            fireEvent(EVENTS.HIDE_SPINNER,{});\r\n        });\r\n    }\r\n\r\n</script>\r\n\r\n<div class=\"app-container flex align-center flex-column\">\r\n    <header class=\"flex border-box align-center justify-center\">\r\n        <div class=\"logo-container text-center\">\r\n            <img class=\"logo\" src=\"./logo.svg\" alt=\"onelist\"/>\r\n        </div>\r\n        \r\n        <div class=\"input-container flex justify-center\">\r\n            <Input width_class=\"width-half\" name=\"search\" type=\"text\" placeholder=\"Type your task here. Press enter to create\" onChange={handleChange} onKeyUp={handleCreateTask} value={new_task_name}/>\r\n        </div>\r\n\r\n        <div class=\"action-container text-center\">\r\n            <Button onClick={signoutUser} label=\"Sign out\" type=\"link\"/>\r\n        </div>\r\n\r\n    </header>\r\n    {#if store && store.length}\r\n        <div class=\"task-container flex justify-start align-center grow flex-column\">\r\n            <li class=\"columns flex justify-space-between align-center text-white text-bold\">\r\n                {#each columns as column}\r\n                    {#if column.show_in_list}\r\n                        <span class=\"column flex justify-center grow border-box text-bold {column.key} { column.show_header ? 'bg-primary' : ''}\">{ column.show_header ? column.label : ''}</span>    \r\n                    {/if}\r\n                {/each}\r\n            </li>\r\n            {#each store as task}\r\n                <Task {task} />    \r\n            {/each}\r\n        </div>\r\n    {/if}\r\n</div>\r\n\r\n{#if selected_task}\r\n    <div class=\"bg-drop fixed outsider bg-transparent\" on:click={processCloseTaskDetail}></div>\r\n    <div class=\"fixed side-popup {selected_task ? 'side-popup-show' : ''}\">\r\n        <div class=\"modal bg-white absolute border-primary\">\r\n            <div class=\"modal-content relative\">\r\n                <div class=\"modal-header flex justify-space-between text-primary\">\r\n                    <span class=\"header text-bold text-primary\">{selected_task.task_name}</span>\r\n                    <Button onClick={processDeleteTask} label=\"Delete\" type=\"link\"/>\r\n                </div>    \r\n                {#each columns as column}\r\n                    {#if column.show_in_detail}\r\n                        <br/>\r\n                        <Input width_class=\"width-full\" hasLabel label={column.label} type={column.field_type} onChange={handleTaskChange} value={selected_task[column.key]} data_field={column.key}/>\r\n                        <br/>  \r\n                    {/if}\r\n                {/each}\r\n                <Button onClick={saveTaskTitleAndNote} label=\"Save\" type=\"secondary\"/>\r\n                <Button onClick={processCloseTaskDetail} label=\"Close\" type=\"primary\"/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n{/if}\r\n\r\n<style>\r\n\r\n    .logo {\r\n        width: 8em;\r\n    }\r\n\r\n    .columns{\r\n        width: 100%;\r\n        list-style: none;\r\n    }\r\n\r\n    .column{\r\n        padding: 0.5rem;\r\n    }\r\n\r\n    .task_name{\r\n        width: 60%;\r\n    }\r\n\r\n    .task_start_date,.task_end_date{\r\n        width: 15%;\r\n    }\r\n\r\n    .task_status{\r\n        width: 10%;\r\n    }\r\n\r\n    .column:first-of-type{\r\n        border-left: 0;\r\n    }\r\n\r\n    .column:last-of-type{\r\n        border-right: 0;\r\n    }\r\n\r\n    .app-container{\r\n        margin:0;\r\n        padding: 0;\r\n        height: 100vh;\r\n    }\r\n\r\n    .logo-container{\r\n        width: 10%;\r\n    }\r\n\r\n    .input-container{\r\n        width: 80%;\r\n    }\r\n\r\n    .action-container{\r\n        width: 10%;\r\n    }\r\n\r\n    .task-container{\r\n        width: 95vw;\r\n    }\r\n\r\n    header{\r\n        width: 100vw;\r\n        padding: 1em;\r\n    }\r\n\r\n    .task-note{\r\n        width: 100%;\r\n    }\r\n\r\n    .side-popup{\r\n        top: 0;\r\n        width: 50%;\r\n        left: 0%;\r\n        bottom: 0;\r\n        height: 100%;\r\n        animation-duration: 1s;\r\n        animation-name: slidein;\r\n        z-index: 9\r\n    }\r\n\r\n    .outsider{\r\n        top: 0;\r\n        left: 0;\r\n        bottom: 0;\r\n        right : 0;\r\n        z-index: 5;\r\n    }\r\n\r\n    @keyframes slidein {\r\n        from {\r\n            left: -50%;\r\n        }\r\n\r\n        to {\r\n            left: 0%;\r\n        }\r\n    }\r\n\r\n    .modal{\r\n        width: 100%;\r\n        height: 100%;\r\n        padding : 1rem 3rem 1rem 2rem;\r\n    }\r\n\r\n    .header{\r\n        font-size: 2rem;\r\n    }\r\n\r\n    \r\n\r\n</style>","<script>\r\n    export let show;\r\n</script>\r\n\r\n{#if show}\r\n    <div class=\"main-container flex align-center flex-column justify-center bg-transparent\">\r\n        <div class=\"flex align-center text-primary\">\r\n            <img class=\"logo\" src=\"./logo.svg\" alt=\"oneList\"/>\r\n        </div>\r\n    </div>\r\n{/if}\r\n\r\n\r\n<style>\r\n    \r\n    .logo {\r\n        width: 8em;\r\n        height: 8em;\r\n    }\r\n\r\n    .main-container{\r\n        margin:0;\r\n        padding: 0;\r\n        height: 100vh;\r\n    }\r\n\r\n</style>","<script>\r\n    export let show = true;\r\n</script>\r\n\r\n{#if show}\r\n    <div class=\"spinner-container flex justify-center align-center fixed flex-column\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"margin: auto; background: rgb(241, 242, 243 / 0%); display: block;\" width=\"100px\" height=\"100px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <circle cx=\"50\" cy=\"50\" r=\"16\" stroke-width=\"4\" stroke=\"#39414d\" stroke-dasharray=\"50.26548245743669 50.26548245743669\" fill=\"none\" stroke-linecap=\"round\">\r\n              <animateTransform attributeName=\"transform\" type=\"rotate\" repeatCount=\"indefinite\" dur=\"1s\" keyTimes=\"0;1\" values=\"0 50 50;360 50 50\"></animateTransform>\r\n            </circle>\r\n        </svg>\r\n    </div>\r\n{/if}\r\n\r\n<style>\r\n    .spinner-container{\r\n        z-index: 1;\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n</style>","<script>\r\n\timport { AUTH } from \"./firebase\";\r\n\timport LoginPage from \"./Pages/LoginPage.svelte\";\r\n\timport AppPage from \"./Pages/AppPage.svelte\";\r\n\timport LoadSpinner from \"./utility/LoadSpinner.svelte\";\r\n\timport ProcessSpinner from \"./utility/ProcessSpinner.svelte\";\r\n    import {registerListener , EVENTS} from './EventManager';\r\n\timport { onMount } from \"svelte\";\r\n\r\n\tlet currentUser;\r\n\tlet isProcessing = false;\r\n\tlet showInitLoad = true;\r\n\r\n\tconst showSpinner = () =>  {\r\n    \tisProcessing = true;\r\n\t\tisProcessing = isProcessing;\r\n\t}\r\n\r\n\tconst hideSpinner = () =>  {\r\n    \tisProcessing = false;\r\n\t\tisProcessing = isProcessing;\r\n\t}\r\n\r\n\tAUTH.onAuthStateChanged((user) => {\r\n\t\tif (user && user.uid) {\r\n\t\t\tcurrentUser = user;\r\n\t\t} else {\r\n\t\t\tcurrentUser = null;\r\n\t\t}\r\n\t\tsetTimeout(() => {\r\n\t\t\tshowInitLoad = false;\r\n\t\t}, 500);\r\n\t});\r\n\r\n\tonMount(() => {\r\n\t\tregisterListener(EVENTS.SHOW_SPINNER,showSpinner);\r\n\t\tregisterListener(EVENTS.HIDE_SPINNER,hideSpinner);\r\n\t});\r\n\r\n</script>\r\n\r\n<main>\r\n\t<ProcessSpinner show={isProcessing}/>\r\n\t<LoadSpinner show={showInitLoad}/>\r\n\t\r\n\t{#if !showInitLoad}\r\n\t\t{#if currentUser}\r\n\t\t\t<AppPage/>\r\n\t\t\t{:else}\r\n\t\t\t<LoginPage />\r\n\t\t{/if}\r\n\t{/if}\r\n</main>\r\n","import App from './App.svelte';\r\nconst app = new App({\r\n\ttarget: document.body,\r\n});\r\n\r\nexport default app;"],"names":["noop","add_location","element","file","line","column","char","__svelte_meta","loc","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","detach","node","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","name","svg_element","createElementNS","text","data","createTextNode","space","empty","set_style","key","value","important","style","setProperty","select_option","select","options","option","__value","selected","selectedIndex","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","target","anchor","customElement","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","dispatch_dev","type","detail","dispatchEvent","bubbles","e","createEvent","initCustomEvent","custom_event","assign","version","append_dev","appendChild","append","insert_dev","insertBefore","insert","detach_dev","listen_dev","event","handler","has_prevent_default","has_stop_propagation","modifiers","keys","dispose","addEventListener","removeEventListener","listen","attr_dev","attribute","removeAttribute","getAttribute","setAttribute","attr","prop_dev","property","set_data_dev","wholeText","validate_each_argument","arg","msg","Symbol","iterator","validate_slots","slot","slot_key","indexOf","console","warn","SvelteComponentDev","$destroy","this","$on","index","splice","$set","$$props","obj","$$set","constructor","$$inline","super","$capture_state","$inject_state","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","freeze","firebase","initializeApp","signinUser","email","password","auth","signInWithEmailAndPassword","signoutUser","signOut","AUTH","events","EVENTS","SHOW_SPINNER","HIDE_SPINNER","UPDATE_STATUS","DELETE_TASK","OPEN_TASK_DETAIL","registerListener","eventName","find","listener","fireEvent","payload","call","error","label","onClick","hasLabel","placeholder","onChange","onKeyUp","width_class","label_class","classes","data_field","user","showLogin","showLoginPage","hideLoginPage","handleChange","onSignIn","res","catch","err","API","BASE_ENDPOINT","ENDPOINTS","getUserTasks","updateTask","createTask","deleteTask","statuses","columns","show_in_list","show_in_detail","show_header","allow_inline_edit","field_type","getStatusClass","_status","replace","user_id","fetch","method","body","JSON","stringify","json","task_name","note","content","node_id","task","updated_task","dataset","field","UPDATE_TASK","sendOpenTaskDetailEvent","task_id","sendDeleteTaskDetailEvent","new_task_name","selected_task","store","handleTaskChange","processUpdateTask","processDeleteTask","processOpenTaskDetail","CLOSE_POPUP","processCloseTaskDetail","currentUser","uid","parse","task_start_date","task_end_date","task_note","task_status","id","checked","_note","handleCreateTask","evt","new_node_ids","saveTaskTitleAndNote","show","isProcessing","showInitLoad","showSpinner","hideSpinner","onAuthStateChanged","setTimeout"],"mappings":"sTAAA,SAASA,KAWT,SAASC,EAAaC,EAASC,EAAMC,EAAMC,EAAQC,GAC/CJ,EAAQK,cAAgB,CACpBC,IAAK,CAAEL,KAAAA,EAAMC,KAAAA,EAAMC,OAAAA,EAAQC,KAAAA,IAGnC,SAASG,EAAIC,GACT,OAAOA,IAEX,SAASC,IACL,OAAOC,OAAOC,OAAO,MAEzB,SAASC,EAAQC,GACbA,EAAIC,QAAQP,GAEhB,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,EAElB,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,EAEhF,IAAIE,EAo4BAC,EAn4BJ,SAASC,EAAcC,EAAaC,GAKhC,OAJKJ,IACDA,EAAuBK,SAASC,cAAc,MAElDN,EAAqBO,KAAOH,EACrBD,IAAgBH,EAAqBO,KA8UhD,SAASC,EAAOC,GACZA,EAAKC,WAAWC,YAAYF,GAEhC,SAASG,EAAaC,EAAYC,GAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAWG,OAAQD,GAAK,EACpCF,EAAWE,IACXF,EAAWE,GAAGE,EAAEH,GAG5B,SAASlC,EAAQsC,GACb,OAAOb,SAASC,cAAcY,GAiBlC,SAASC,EAAYD,GACjB,OAAOb,SAASe,gBAAgB,6BAA8BF,GAElE,SAASG,EAAKC,GACV,OAAOjB,SAASkB,eAAeD,GAEnC,SAASE,IACL,OAAOH,EAAK,KAEhB,SAASI,IACL,OAAOJ,EAAK,IA2OhB,SAASK,EAAUjB,EAAMkB,EAAKC,EAAOC,GACjCpB,EAAKqB,MAAMC,YAAYJ,EAAKC,EAAOC,EAAY,YAAc,IAEjE,SAASG,EAAcC,EAAQL,GAC3B,IAAK,IAAIb,EAAI,EAAGA,EAAIkB,EAAOC,QAAQlB,OAAQD,GAAK,EAAG,CAC/C,MAAMoB,EAASF,EAAOC,QAAQnB,GAC9B,GAAIoB,EAAOC,UAAYR,EAEnB,YADAO,EAAOE,UAAW,GAI1BJ,EAAOK,eAAiB,EAsR5B,SAASC,EAAsBC,GAC3BvC,EAAoBuC,EAUxB,SAASC,EAAQrD,IARjB,WACI,IAAKa,EACD,MAAM,IAAIyC,MAAM,oDACpB,OAAOzC,GAMP0C,GAAwBC,GAAGC,SAASC,KAAK1D,GA6C7C,MAAM2D,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EAWvB,SAASC,EAAoBnE,GACzB6D,EAAiBH,KAAK1D,GAK1B,IAAIoE,GAAW,EACf,MAAMC,EAAiB,IAAIC,IAC3B,SAASC,IACL,IAAIH,EAAJ,CAEAA,GAAW,EACX,EAAG,CAGC,IAAK,IAAIzC,EAAI,EAAGA,EAAIgC,EAAiB/B,OAAQD,GAAK,EAAG,CACjD,MAAMyB,EAAYO,EAAiBhC,GACnCwB,EAAsBC,GACtBoB,EAAOpB,EAAUI,IAIrB,IAFAL,EAAsB,MACtBQ,EAAiB/B,OAAS,EACnBgC,EAAkBhC,QACrBgC,EAAkBa,KAAlBb,GAIJ,IAAK,IAAIjC,EAAI,EAAGA,EAAIkC,EAAiBjC,OAAQD,GAAK,EAAG,CACjD,MAAM+C,EAAWb,EAAiBlC,GAC7B0C,EAAeM,IAAID,KAEpBL,EAAeO,IAAIF,GACnBA,KAGRb,EAAiBjC,OAAS,QACrB+B,EAAiB/B,QAC1B,KAAOkC,EAAgBlC,QACnBkC,EAAgBW,KAAhBX,GAEJI,GAAmB,EACnBE,GAAW,EACXC,EAAeQ,SAEnB,SAASL,EAAOhB,GACZ,GAAoB,OAAhBA,EAAGsB,SAAmB,CACtBtB,EAAGgB,SACHpE,EAAQoD,EAAGuB,eACX,MAAMC,EAAQxB,EAAGwB,MACjBxB,EAAGwB,MAAQ,EAAE,GACbxB,EAAGsB,UAAYtB,EAAGsB,SAASG,EAAEzB,EAAG0B,IAAKF,GACrCxB,EAAG2B,aAAa7E,QAAQ6D,IAiBhC,MAAMiB,EAAW,IAAId,IACrB,IAAIe,EACJ,SAASC,IACLD,EAAS,CACLE,EAAG,EACHC,EAAG,GACHP,EAAGI,GAGX,SAASI,IACAJ,EAAOE,GACRnF,EAAQiF,EAAOG,GAEnBH,EAASA,EAAOJ,EAEpB,SAASS,EAAcC,EAAOC,GACtBD,GAASA,EAAMhE,IACfyD,EAASS,OAAOF,GAChBA,EAAMhE,EAAEiE,IAGhB,SAASE,EAAeH,EAAOC,EAAOxE,EAAQsD,GAC1C,GAAIiB,GAASA,EAAMI,EAAG,CAClB,GAAIX,EAAST,IAAIgB,GACb,OACJP,EAASR,IAAIe,GACbN,EAAOG,EAAE9B,MAAK,KACV0B,EAASS,OAAOF,GACZjB,IACItD,GACAuE,EAAM9D,EAAE,GACZ6C,QAGRiB,EAAMI,EAAEH,IAkmBhB,SAASI,EAAiBL,GACtBA,GAASA,EAAMH,IAKnB,SAASS,EAAgB7C,EAAW8C,EAAQC,EAAQC,GAChD,MAAMtB,SAAEA,EAAQrB,SAAEA,EAAQ4C,WAAEA,EAAUlB,aAAEA,GAAiB/B,EAAUI,GACnEsB,GAAYA,EAASwB,EAAEJ,EAAQC,GAC1BC,GAEDjC,GAAoB,KAChB,MAAMoC,EAAiB9C,EAAS+C,IAAIzG,GAAK0G,OAAOlG,GAC5C8F,EACAA,EAAW3C,QAAQ6C,GAKnBnG,EAAQmG,GAEZnD,EAAUI,GAAGC,SAAW,MAGhC0B,EAAa7E,QAAQ6D,GAEzB,SAASuC,EAAkBtD,EAAW1B,GAClC,MAAM8B,EAAKJ,EAAUI,GACD,OAAhBA,EAAGsB,WACH1E,EAAQoD,EAAG6C,YACX7C,EAAGsB,UAAYtB,EAAGsB,SAASjD,EAAEH,GAG7B8B,EAAG6C,WAAa7C,EAAGsB,SAAW,KAC9BtB,EAAG0B,IAAM,IAGjB,SAASyB,EAAWvD,EAAWzB,IACI,IAA3ByB,EAAUI,GAAGwB,MAAM,KACnBrB,EAAiBD,KAAKN,GAxvBrBc,IACDA,GAAmB,EACnBH,EAAiB6C,KAAKrC,IAwvBtBnB,EAAUI,GAAGwB,MAAM6B,KAAK,IAE5BzD,EAAUI,GAAGwB,MAAOrD,EAAI,GAAM,IAAO,GAAMA,EAAI,GAEnD,SAASmF,EAAK1D,EAAWN,EAASiE,EAAUC,EAAiBC,EAAWC,EAAOC,EAAenC,EAAQ,EAAE,IACpG,MAAMoC,EAAmBvG,EACzBsC,EAAsBC,GACtB,MAAMI,EAAKJ,EAAUI,GAAK,CACtBsB,SAAU,KACVI,IAAK,KAELgC,MAAAA,EACA1C,OAAQlF,EACR2H,UAAAA,EACAI,MAAOpH,IAEPwD,SAAU,GACV4C,WAAY,GACZiB,cAAe,GACfvC,cAAe,GACfI,aAAc,GACdoC,QAAS,IAAIC,IAAI1E,EAAQyE,UAAYH,EAAmBA,EAAiB5D,GAAG+D,QAAU,KAEtFE,UAAWxH,IACX+E,MAAAA,EACA0C,YAAY,EACZC,KAAM7E,EAAQoD,QAAUkB,EAAiB5D,GAAGmE,MAEhDR,GAAiBA,EAAc3D,EAAGmE,MAClC,IAAIC,GAAQ,EAkBZ,GAjBApE,EAAG0B,IAAM6B,EACHA,EAAS3D,EAAWN,EAAQoE,OAAS,IAAI,CAACvF,EAAGkG,KAAQC,KACnD,MAAMtF,EAAQsF,EAAKlG,OAASkG,EAAK,GAAKD,EAOtC,OANIrE,EAAG0B,KAAO+B,EAAUzD,EAAG0B,IAAIvD,GAAI6B,EAAG0B,IAAIvD,GAAKa,MACtCgB,EAAGkE,YAAclE,EAAG6D,MAAM1F,IAC3B6B,EAAG6D,MAAM1F,GAAGa,GACZoF,GACAjB,EAAWvD,EAAWzB,IAEvBkG,KAET,GACNrE,EAAGgB,SACHoD,GAAQ,EACRxH,EAAQoD,EAAGuB,eAEXvB,EAAGsB,WAAWkC,GAAkBA,EAAgBxD,EAAG0B,KAC/CpC,EAAQoD,OAAQ,CAChB,GAAIpD,EAAQiF,QAAS,CAEjB,MAAMC,EAvxClB,SAAkBxI,GACd,OAAOyI,MAAMC,KAAK1I,EAAQ2I,YAsxCJC,CAAStF,EAAQoD,QAE/B1C,EAAGsB,UAAYtB,EAAGsB,SAASuD,EAAEL,GAC7BA,EAAM1H,QAAQc,QAIdoC,EAAGsB,UAAYtB,EAAGsB,SAASU,IAE3B1C,EAAQwF,OACR5C,EAActC,EAAUI,GAAGsB,UAC/BmB,EAAgB7C,EAAWN,EAAQoD,OAAQpD,EAAQqD,OAAQrD,EAAQsD,eAEnE7B,IAEJpB,EAAsBiE,GAyE1B,SAASmB,EAAaC,EAAMC,GACxBxH,SAASyH,cArpCb,SAAsBF,EAAMC,EAAQE,GAAU,GAC1C,MAAMC,EAAI3H,SAAS4H,YAAY,eAE/B,OADAD,EAAEE,gBAAgBN,EAAMG,GAAS,EAAOF,GACjCG,EAkpCgBG,CAAaP,EAAMtI,OAAO8I,OAAO,CAAEC,QAAS,UAAYR,IAAS,IAE5F,SAASS,EAAWhD,EAAQ7E,GACxBkH,EAAa,kBAAmB,CAAErC,OAAAA,EAAQ7E,KAAAA,IA1jD9C,SAAgB6E,EAAQ7E,GACpB6E,EAAOiD,YAAY9H,GA0jDnB+H,CAAOlD,EAAQ7E,GAMnB,SAASgI,EAAWnD,EAAQ7E,EAAM8E,GAC9BoC,EAAa,kBAAmB,CAAErC,OAAAA,EAAQ7E,KAAAA,EAAM8E,OAAAA,IA7gDpD,SAAgBD,EAAQ7E,EAAM8E,GAC1BD,EAAOoD,aAAajI,EAAM8E,GAAU,MA6gDpCoD,CAAOrD,EAAQ7E,EAAM8E,GAMzB,SAASqD,EAAWnI,GAChBkH,EAAa,kBAAmB,CAAElH,KAAAA,IAClCD,EAAOC,GAiBX,SAASoI,EAAWpI,EAAMqI,EAAOC,EAAS7G,EAAS8G,EAAqBC,GACpE,MAAMC,GAAwB,IAAZhH,EAAmB,CAAC,WAAaA,EAAUmF,MAAMC,KAAKhI,OAAO6J,KAAKjH,IAAY,GAC5F8G,GACAE,EAAUpG,KAAK,kBACfmG,GACAC,EAAUpG,KAAK,mBACnB6E,EAAa,4BAA6B,CAAElH,KAAAA,EAAMqI,MAAAA,EAAOC,QAAAA,EAASG,UAAAA,IAClE,MAAME,EA5/CV,SAAgB3I,EAAMqI,EAAOC,EAAS7G,GAElC,OADAzB,EAAK4I,iBAAiBP,EAAOC,EAAS7G,GAC/B,IAAMzB,EAAK6I,oBAAoBR,EAAOC,EAAS7G,GA0/CtCqH,CAAO9I,EAAMqI,EAAOC,EAAS7G,GAC7C,MAAO,KACHyF,EAAa,+BAAgC,CAAElH,KAAAA,EAAMqI,MAAAA,EAAOC,QAAAA,EAASG,UAAAA,IACrEE,KAGR,SAASI,EAAS/I,EAAMgJ,EAAW7H,IAl+CnC,SAAcnB,EAAMgJ,EAAW7H,GACd,MAATA,EACAnB,EAAKiJ,gBAAgBD,GAChBhJ,EAAKkJ,aAAaF,KAAe7H,GACtCnB,EAAKmJ,aAAaH,EAAW7H,GA+9CjCiI,CAAKpJ,EAAMgJ,EAAW7H,GACT,MAATA,EACA+F,EAAa,2BAA4B,CAAElH,KAAAA,EAAMgJ,UAAAA,IAEjD9B,EAAa,wBAAyB,CAAElH,KAAAA,EAAMgJ,UAAAA,EAAW7H,MAAAA,IAEjE,SAASkI,EAASrJ,EAAMsJ,EAAUnI,GAC9BnB,EAAKsJ,GAAYnI,EACjB+F,EAAa,uBAAwB,CAAElH,KAAAA,EAAMsJ,SAAAA,EAAUnI,MAAAA,IAM3D,SAASoI,EAAa3I,EAAMC,GACxBA,EAAO,GAAKA,EACRD,EAAK4I,YAAc3I,IAEvBqG,EAAa,mBAAoB,CAAElH,KAAMY,EAAMC,KAAAA,IAC/CD,EAAKC,KAAOA,GAEhB,SAAS4I,EAAuBC,GAC5B,KAAmB,iBAARA,GAAsBA,GAAsB,iBAARA,GAAoB,WAAYA,GAAM,CACjF,IAAIC,EAAM,iDAIV,KAHsB,mBAAXC,QAAyBF,GAAOE,OAAOC,YAAYH,IAC1DC,GAAO,iEAEL,IAAI1H,MAAM0H,IAGxB,SAASG,EAAerJ,EAAMsJ,EAAMrB,GAChC,IAAK,MAAMsB,KAAYnL,OAAO6J,KAAKqB,IACzBrB,EAAKuB,QAAQD,IACfE,QAAQC,KAAK,IAAI1J,mCAAsCuJ,OAOnE,MAAMI,UAnHN,MACIC,WACIhF,EAAkBiF,KAAM,GACxBA,KAAKD,SAAWpM,EAEpBsM,IAAIpD,EAAM9D,GACN,MAAM+C,EAAakE,KAAKnI,GAAGiE,UAAUe,KAAUmD,KAAKnI,GAAGiE,UAAUe,GAAQ,IAEzE,OADAf,EAAU/D,KAAKgB,GACR,KACH,MAAMmH,EAAQpE,EAAU6D,QAAQ5G,IACjB,IAAXmH,GACApE,EAAUqE,OAAOD,EAAO,IAGpCE,KAAKC,GAtzDT,IAAkBC,EAuzDNN,KAAKO,QAvzDCD,EAuzDkBD,EAtzDG,IAA5B9L,OAAO6J,KAAKkC,GAAKrK,UAuzDhB+J,KAAKnI,GAAGkE,YAAa,EACrBiE,KAAKO,MAAMF,GACXL,KAAKnI,GAAGkE,YAAa,KAkG7ByE,YAAYrJ,GACR,IAAKA,IAAaA,EAAQoD,SAAWpD,EAAQsJ,SACzC,MAAM,IAAI9I,MAAM,iCAEpB+I,QAEJX,WACIW,MAAMX,WACNC,KAAKD,SAAW,KACZH,QAAQC,KAAK,oCAGrBc,kBACAC,kBCn9DJ,MAAMC,GAAiB,CACrBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,gBAGf7M,OAAO8M,OAAOR,IAEdS,SAASC,cAAcV,IAEhB,MAAMW,GAAa,CAACC,EAAMC,IACxBJ,SAASK,OAAOC,2BAA2BH,EAAOC,GAG9CG,GAAc,KACzBP,SAASK,OAAOG,WAGLC,GAAOT,SAASK,OCtBzBK,GAAS,GAETC,GAAS,CACXC,aAAe,eACfC,aAAe,eACfC,cAAgB,cAChBC,YAAc,cACdC,iBAAmB,oBAGvB/N,OAAO8M,OAAOY,IAEd,MAAMM,GAAmB,CAACC,EAAWzJ,KAC5BiJ,GAAOQ,KACRR,GAAOQ,GAAa,IAENR,GAAOQ,GAAWC,MAAMC,GAC/BA,EAAS3J,WAAaA,KAG7BiJ,GAAOQ,GAAWzK,KAAK,CAAEgB,SAAAA,KAI3B4J,GAAY,CAACH,EAAWI,KAC1B,GAAIZ,GAAOQ,GAAY,CACDR,GAAOQ,GACf7N,SAAS+N,IACf,IACIA,EAAS3J,SAAS8J,UAAK7C,EAAK4C,GAC9B,MAAOE,GACLlD,QAAQkD,MAAM,gBAAgBN,IAC9B5C,QAAQkD,MAAM,eAAeJ,IAC7B9C,QAAQkD,MAAM,cAAcF,IAC5BhD,QAAQkD,MAAM,YAAYA,4ECzB6BvJ,qEAA1BA,+LAA7CmE,gDAA6DnE,OAAAA,6EAAUA,2BAA1BA,oNAP9BwJ,cACAC,WACAnG,qoECcwCtD,iCAA1BA,kCAAmBA,wCAA5CmE,0CAAmDnE,iCAA1BA,uDAAmBA,iNAYzBA,oCAAoCA,gHAAsGA,0CAAzJmE,2CAA0FnE,OAAAA,iEAAoBA,OAAAA,kFAA/FA,oCAAoCA,qLAAsGA,6QAFvFA,0DAAyDA,sDAA3HmE,0CAAqGnE,OAAAA,mIAAnCA,iEAAyDA,yLALpHA,oCAALtD,6KAD8DsD,kIAAiIA,yCAArMmE,+FAA+KnE,OAAAA,yFACpKA,mBAALtD,+HAAAA,6EAD8DsD,iLAAiIA,0LAEhIA,gEAA9CA,uGAAfmE,gDAA6DnE,iCAA9CA,kNAPtBA,kCAIS,WAATA,QAMkB,cAATA,uRAVTA,+WAfU0J,GAAW,WACXpG,WACA1G,YACA4M,kBACAG,eACAC,cACAC,YACAvM,EAAQ,mBACRwM,kBACAC,EAAc,mBACdC,iBACAC,cACArM,msOCkIkBoC,k7CAXzBmE,SACIH,OACIA,gBAIRG,SACIH,OACIA,cACAA,cACAA,iCAGJA,OACIA,gBAIRG,SACIH,8ZA/B0EhE,2GAESA,6CAE1DA,0EAGAA,6sCAlB7BmE,SACIH,OACIA,OACIA,cAGJA,OACIA,OACIA,cAEJA,iCAEAA,iCAEAA,iCAEAA,cACAA,ocAlBXhE,ySAFTmE,+aArGQ+F,GACAhC,MAAM,GACNtL,KAAK,IAGLuN,GAAY,QAEVC,WACFD,GAAY,IAGVE,WACFF,GAAY,IAGVG,EAAgB5G,IAClBwG,EAAKxG,EAAE1C,OAAOpE,MAAQ8G,EAAE1C,OAAO1D,OAG7BiN,aAEIrC,EAAQgC,EAAKhC,MACbC,EAAW+B,EAAK/B,SAEnBD,GAASC,IACRiB,GAAUV,GAAOC,iBACjBV,GAAWC,EAAMC,GAChBzG,MAAM8I,IACHpB,GAAUV,GAAOE,oBAEpB6B,OAAMC,IACHtB,GAAUV,GAAOE,mnBClCjC,MAAM+B,GAAM,CACRC,cAAgB,iFAChBC,UAAY,CACRC,aAAiB,eACjBC,WAAe,aACfC,WAAe,aACfC,WAAe,eAIjBC,GAAW,CACb,cACA,cACA,aAGEC,GAAU,CACZ,CACI3B,MAAQ,OACRnM,IAAM,YACN+N,cAAe,EACfC,gBAAiB,EACjBC,aAAc,EACdC,mBAAoB,EACpBC,WAAa,QAEjB,CACIhC,MAAQ,aACRnM,IAAM,kBACN+N,cAAe,EACfC,gBAAiB,EACjBC,aAAc,EACdC,mBAAoB,EACpBC,WAAa,QAEjB,CACIhC,MAAQ,WACRnM,IAAM,gBACN+N,cAAe,EACfC,gBAAiB,EACjBC,aAAc,EACdC,mBAAoB,EACpBC,WAAa,QAEjB,CACIhC,MAAQ,SACRnM,IAAM,cACN+N,cAAe,EACfC,gBAAiB,EACjBC,aAAc,EACdC,mBAAoB,EACpBC,WAAa,UAEjB,CACIhC,MAAQ,QACRnM,IAAM,YACN+N,cAAe,EACfC,gBAAiB,EACjBC,aAAc,EACdC,mBAAoB,EACpBC,WAAa,cAKfC,GAAkBC,GAChBA,EACGA,EAAQC,QAAQ,IAAI,KADP,GAKxB3Q,OAAO8M,OAAO6C,IACd3P,OAAO8M,OAAOoD,IACdlQ,OAAO8M,OAAOqD,IC1EP,MAAML,GAAgBc,GAClBC,MAAMlB,GAAIC,cAAcD,GAAIE,UAAUC,aAAa,CACtDgB,OAAS,OACTC,KAAOC,KAAKC,UAAU,CAClBL,QAAAA,MAGPlK,MAAK8I,GAAOA,EAAI0B,SAChBzB,OAAMC,IACHrE,QAAQkD,MAAM,kBAAkBmB,MAI3BM,GAAa,CAACY,EAAQO,EAAUC,IAClCP,MAAMlB,GAAIC,cAAcD,GAAIE,UAAUG,WAAW,CACpDc,OAAS,OACTC,KAAOC,KAAKC,UAAU,CAClBL,QAAAA,EACAS,QAAUF,EACVC,KAAAA,MAEL1K,MAAK8I,GAAOA,EAAI0B,SAClBzB,OAAMC,IACHrE,QAAQkD,MAAM,gBAAgBmB,MAIzBO,GAAa,CAACW,EAAQU,IACxBT,MAAMlB,GAAIC,cAAcD,GAAIE,UAAUI,WAAW,CACpDa,OAAS,OACTC,KAAOC,KAAKC,UAAU,CAClBL,QAAAA,EACAU,QAAAA,MAEL5K,MAAK8I,GAAOA,EAAI0B,SAClBzB,OAAMC,IACHrE,QAAQkD,MAAM,gBAAgBmB,MAIzBK,GAAa,CAACa,EAAQU,EAAQD,EAAQD,IACxCP,MAAMlB,GAAIC,cAAcD,GAAIE,UAAUE,WAAW,CACpDe,OAAS,OACTC,KAAOC,KAAKC,UAAU,CAClBL,QAAAA,EACAU,QAAAA,EACAD,QAAAA,EACAD,KAAAA,MAEL1K,MAAK8I,GAAOA,EAAI0B,SAClBzB,OAAMC,IACHrE,QAAQkD,MAAM,gBAAgBmB,6JCxBjB1K,KAAOuL,8JADsDvL,KAAO3C,SAAoB,aAAd2C,KAAO3C,IAAqB,gBAAkB,uBAAwC,UAArB2C,KAAOwL,WAAyB,gBAAkB,sEAAtMrH,iTASenE,KAAKA,KAAO3C,iCAGM2C,sEAGAA,2XANzBmE,yBACAA,SACIH,0BAGAA,2DALGhE,KAAKA,KAAO3C,qWAPQ,WAAtB2C,KAAOwL,uYAGKxL,KAAOwL,mBAAqBC,GAAezL,KAAaA,KAAO3C,YAAc2C,KAAaA,KAAO3C,cAAgB2C,gBAA0BA,KAAO3C,YAAc6N,oIAApIO,GAAezL,KAAaA,KAAO3C,qBAAc2C,KAAaA,KAAO3C,0QAFjG2C,KAAOwL,0CAA4CxL,KAAKA,KAAO3C,cAAgB2C,gBAA0BA,KAAO3C,mIAA7D2C,KAAKA,KAAO3C,iRAJvF2C,KAAOoL,qHAAPpL,KAAOoL,6PADTD,iCAALzO,6YADNyH,iGACWgH,gBAALzO,uHAAAA,uEAAAA,uSApBS6P,KAEPC,MAAmBD,SAEjBjC,EAAgB5G,QAClB8I,EAAa9I,EAAE1C,OAAOyL,QAAQC,OAAShJ,EAAE1C,OAAO1D,SAChD8L,GAAUV,GAAOiE,YAAYH,IAG3BI,OACFxD,GAAUV,GAAOK,iBAAiBwD,EAAKM,UAGrCC,OACF1D,GAAUV,GAAOI,YAAYyD,EAAKM,83CCqInB1B,iCAALzO,qCAMCsD,mCAALtD,obARNyH,SACIH,8IACWmH,gBAALzO,+HAAAA,2BAMCsD,kBAALtD,uHAAAA,uEAAAA,2RAJsIsD,MAAOsL,YAActL,MAAOwJ,MAAQ,oHAA7FxJ,MAAO3C,SAAO2C,MAAOsL,YAAc,aAAe,2DAArHnH,uLADCnE,MAAOoL,gHAAPpL,MAAOoL,woBAkBiCpL,KAAcmM,sCAC1CnM,qDAEdmL,iCAALzO,iGAOesD,2EACAA,wrBAfCA,KAAgB,kBAAoB,0DADlEmE,kBACAA,SACIH,OACIA,OACIA,OACIA,gJAL6ChE,2DAKAA,KAAcmM,wCAGxDhB,gBAALzO,oHAAAA,sEAPgBsD,KAAgB,kBAAoB,gGAOpDtD,odAGsDsD,MAAOwJ,WAAaxJ,MAAOwL,oBAAsBxL,WAAyBA,KAAcA,MAAO3C,gBAAkB2C,MAAO3C,mJADxK8G,oCAEAA,wDAD0HnE,KAAcA,MAAO3C,ySAF9I2C,MAAOqL,uHAAPrL,MAAOqL,+ZAlCyGrL,aAAuBA,WAAyBA,6CAI5JsI,qDAIpBtI,MAASA,KAAMtD,gBAgBnBsD,w2BA/BLmE,SACIH,OACIA,OACIA,cAGJA,0BAIAA,wHAHiLhE,gBAQhLA,MAASA,KAAMtD,wGAgBnBsD,geA3JG+M,EACAC,EAHAC,WAKE3C,EAAgB5G,QAClBqJ,EAAgBrJ,EAAE1C,OAAO1D,QAGvB4P,EAAoBxJ,QACtBsJ,EAActJ,EAAE1C,OAAOyL,QAAQC,OAAShJ,EAAE1C,OAAO1D,UAGrDa,QAEI6K,GAAiBN,GAAOiE,YAAYQ,GACpCnE,GAAiBN,GAAOI,YAAYsE,GACpCpE,GAAiBN,GAAOK,iBAAiBsE,GACzCrE,GAAiBN,GAAO4E,YAAYC,GAEpCnE,GAAUV,GAAOC,iBAEjBmC,GAAatC,GAAKgF,YAAYC,KAC7B/L,MAAK8I,OACCA,GAAOA,EAAI1H,OAAS0H,EAAI1H,MAAMpG,YAC7BuQ,EAAQzC,EAAI1H,eACJrG,EAAE,EAAEA,EAAEwQ,EAAMvQ,OAAOD,OACpBwQ,EAAMxQ,GAAG2P,YACFF,EAAOF,KAAK0B,MAAMT,EAAMxQ,GAAG2P,UACjCa,EAAMxQ,GAAoB,gBAAIyP,EAAKyB,uBACnCV,EAAMxQ,GAAkB,cAAIyP,EAAK0B,qBACjCX,EAAMxQ,GAAc,UAAIyP,EAAK2B,iBAC7BZ,EAAMxQ,GAAgB,YAAIyP,EAAK4B,mBAC/Bb,EAAMxQ,GAAc,UAAIwQ,EAAMxQ,GAAG4P,eACjCY,EAAMxQ,GAAY,QAAIwQ,EAAMxQ,GAAGsR,aACxBd,EAAMxQ,GAAG2P,YACTa,EAAMxQ,GAAGuR,eACTf,EAAMxQ,GAAG4P,eACTY,EAAMxQ,GAAGsR,GAGxB3E,GAAUV,GAAOE,sBAEjBQ,GAAUV,GAAOE,oBAGxB6B,OAAMC,IACHtB,GAAUV,GAAOE,6BAInBwE,EAAqBP,IACvB5B,GAAWzC,GAAKgF,YAAYC,IAAIZ,OAChCI,EAAQA,EAAM1L,QAAOgL,GAAQA,EAAKM,UAAYA,MAG5CM,EAAqBnQ,UACjBiR,GACFN,gBAAkB3Q,EAAK2Q,gBAAkB3Q,EAAK2Q,gBAAkB,GAChEC,cAAgB5Q,EAAK4Q,cAAgB5Q,EAAK4Q,cAAgB,GAC1DC,UAAY7Q,EAAK6Q,UAAY7Q,EAAK6Q,UAAY,GAC9CC,YAAc9Q,EAAK8Q,YAAc9Q,EAAK8Q,YAAc,IAExD/C,GAAWvC,GAAKgF,YAAYC,IAAIzQ,EAAK6P,QAAQ7P,EAAKmP,UAAUH,KAAKC,UAAUgC,KAGzEC,EAAoBC,IACP,UAAZA,EAAI9Q,KAAmB0P,IACtB3D,GAAUV,GAAOC,iBACjBqC,GACIxC,GAAKgF,YAAYC,IACjBV,EACAf,KAAKC,WACD0B,gBAAkB,GAClBC,cAAgB,GAChBC,UAAY,GACZC,YAAc,iBAGrBpM,MAAK8I,IACFyC,EAAMzO,MACFqO,QAAQrC,EAAI4D,aAAa,GACzBjC,UAAYY,EACZY,gBAAkB,GAClBC,cAAgB,GAChBC,UAAY,GACZC,YAAc,oBAElBf,EAAgB,WAEhB3D,GAAUV,GAAOE,oBAEpB6B,OAAMC,IACHtB,GAAUV,GAAOE,sBAKvByE,EAAyBR,QAC3BG,EAAgBC,EAAM1L,QAAOgL,GAAQA,EAAKM,UAAYA,IAAS,KAI7DU,WACFP,EAAgB,OAGdqB,OACFjF,GAAUV,GAAOC,uBACXsF,GACFN,gBAAkBX,EAAcW,gBAAkBX,EAAcW,gBAAkB,GAClFC,cAAgBZ,EAAcY,cAAgBZ,EAAcY,cAAgB,GAC5EC,UAAYb,EAAca,UAAYb,EAAca,UAAY,GAChEC,YAAcd,EAAcc,YAAcd,EAAcc,YAAc,IAE1E/C,GAAWvC,GAAKgF,YAAYC,IAAIT,EAAcH,QAAQG,EAAcb,UAAUH,KAAKC,UAAUgC,IAC5FvM,MAAK8I,IACFpB,GAAUV,GAAOE,oBAEpB6B,OAAMC,IACHtB,GAAUV,GAAOE,g2CC5HzBzE,SACIH,OACIA,wJAHPhE,wOAAAA,kRAHUsO,s7DCIXnK,SACIH,OACIA,OACEA,wJAJThE,wOAAAA,qRAHUsO,GAAO,y6BC6CftO,2nCAJgBA,0CACHA,2BAEbA,oRAJPmE,8GACuBnE,wCACHA,gBAEbA,oYApCFwN,+CACAe,GAAe,EACfC,GAAe,QAEbC,WACFF,GAAe,WAIbG,WACFH,GAAe,WAInB/F,GAAKmG,oBAAoBzE,IACpBA,GAAQA,EAAKuD,QAChBD,EAActD,OAEdsD,EAAc,MAEfoB,qBACCJ,GAAe,KACb,QAGJrQ,QACC6K,GAAiBN,GAAOC,aAAa8F,GACrCzF,GAAiBN,GAAOE,aAAa8F,2jBCnC3B,oJAAQ,CACnB1N,OAAQjF,SAASgQ"}